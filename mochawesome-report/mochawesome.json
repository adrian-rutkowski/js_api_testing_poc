{
  "stats": {
    "suites": 5,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2023-07-26T15:16:16.945Z",
    "end": "2023-07-26T15:16:19.622Z",
    "duration": 2677,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "6f89669f-0d15-4441-be8a-99df89d06069",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5fdfee94-fc09-46cb-ab7f-d47df70c4f74",
          "title": "GET /posts",
          "fullFile": "/Users/adrian/Code/Personal/js_api_testing_poc/test/posts.js",
          "file": "/test/posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return a non-empty response body",
              "fullTitle": "GET /posts should return a non-empty response body",
              "timedOut": false,
              "duration": 362,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "request.get('posts').end(function (err, res) {\n  (0, _chai.expect)(res.body).to.not.be.empty;\n  done();\n});",
              "err": {},
              "uuid": "d2ac38bf-4484-4b12-a3a1-0c0fc5ad2826",
              "parentUUID": "5fdfee94-fc09-46cb-ab7f-d47df70c4f74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return an array",
              "fullTitle": "GET /posts should return an array",
              "timedOut": false,
              "duration": 288,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return request.get('posts').then(function (res) {\n  (0, _chai.expect)(res.body).to.be.an('array');\n});",
              "err": {},
              "uuid": "64e5ef89-186f-4e3c-b7a8-914fd98462b8",
              "parentUUID": "5fdfee94-fc09-46cb-ab7f-d47df70c4f74",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should return a status code of 200",
              "fullTitle": "GET /posts should return a status code of 200",
              "timedOut": false,
              "duration": 258,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "9a3e40bd-835c-4a23-a00e-7644b3e21053",
              "parentUUID": "5fdfee94-fc09-46cb-ab7f-d47df70c4f74",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d2ac38bf-4484-4b12-a3a1-0c0fc5ad2826",
            "64e5ef89-186f-4e3c-b7a8-914fd98462b8",
            "9a3e40bd-835c-4a23-a00e-7644b3e21053"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 908,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "f4137679-34d6-42e3-963c-ebffc0da056d",
          "title": "GET /posts/:id",
          "fullFile": "/Users/adrian/Code/Personal/js_api_testing_poc/test/posts.js",
          "file": "/test/posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should return details of the post and response code 200",
              "fullTitle": "GET /posts/:id should return details of the post and response code 200",
              "timedOut": false,
              "duration": 452,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(randomId);\nreturn request.get(\"posts/\".concat(randomId)).then(function (res) {\n  (0, _chai.expect)(res.body).to.not.be.empty;\n  (0, _chai.expect)(res.statusCode).to.equal(OK_200);\n  (0, _chai.expect)(res.body.id).to.equal(randomId);\n});",
              "err": {},
              "uuid": "a62b2fa0-7816-40b2-a04c-9156d038f1bb",
              "parentUUID": "f4137679-34d6-42e3-963c-ebffc0da056d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a62b2fa0-7816-40b2-a04c-9156d038f1bb"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 452,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "5f4660c4-9cbe-4391-8161-0a33d3b8d5fa",
          "title": "POST /posts",
          "fullFile": "/Users/adrian/Code/Personal/js_api_testing_poc/test/posts.js",
          "file": "/test/posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should create a new post",
              "fullTitle": "POST /posts should create a new post",
              "timedOut": false,
              "duration": 431,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "afc8a93c-b41f-4632-a7ab-1efa71a99238",
              "parentUUID": "5f4660c4-9cbe-4391-8161-0a33d3b8d5fa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "afc8a93c-b41f-4632-a7ab-1efa71a99238"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 431,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "72343700-36ae-4000-8156-937a5f2f83d3",
          "title": "PUT /posts/:id",
          "fullFile": "/Users/adrian/Code/Personal/js_api_testing_poc/test/posts.js",
          "file": "/test/posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should update an existing post",
              "fullTitle": "PUT /posts/:id should update an existing post",
              "timedOut": false,
              "duration": 437,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "350f6f09-be0b-4f65-991e-bf3981c4f37f",
              "parentUUID": "72343700-36ae-4000-8156-937a5f2f83d3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "350f6f09-be0b-4f65-991e-bf3981c4f37f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 437,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "3fe1893a-e85c-444f-9420-d0eead532b1a",
          "title": "DELETE /posts/:id",
          "fullFile": "/Users/adrian/Code/Personal/js_api_testing_poc/test/posts.js",
          "file": "/test/posts.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should delete an existing post",
              "fullTitle": "DELETE /posts/:id should delete an existing post",
              "timedOut": false,
              "duration": 441,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); });",
              "err": {},
              "uuid": "87f78bde-bda7-489e-8233-76ed11b10c13",
              "parentUUID": "3fe1893a-e85c-444f-9420-d0eead532b1a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "87f78bde-bda7-489e-8233-76ed11b10c13"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 441,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}